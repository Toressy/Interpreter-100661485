expr        : KEYWORD:VAR IDENTIFIER EQ expr
            :comp_expr ((KEYWORD:AND|KEYWORD:OR) comp_expr)*

comp_expr   : NOT expr
            : arith_expr ((EE|LT|GT|LTE|GTE)arith_expr)*
				
arith_expr  :term ((PLUS|MINUS) term)*

term        : factor ((MUL|DIV) factor)*

factor	    : (PLUS|MINUS) factor
			: power

power				: call (POW factor)*

call				: atom (LPAREN (expr (COMMA expr)*)? RPAREN)?


atom 		: INT|FLOAT|STRING|IDENTIFIER
            : BOOLEAN 
			: LPAREN expr RPAREN
            : if-expr
            : for-expr
			: while-expr
            : func-def

if-expr			: KEYWORD:IF expr KEYWORD:THEN expr
				(KEYWORD:ELIF expr KEYWORD:THEN expr)*
				(KEYWORD:ELSE expr)?

for-expr		: KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr 
							(KEYWORD:STEP expr)? KEYWORD:THEN expr

while-expr	: KEYWORD:WHILE expr KEYWORD:THEN expr

func-def		: KEYWORD:FUN IDENTIFIER?
				LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
				ARROW expr